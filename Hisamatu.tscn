[gd_scene load_steps=30 format=2]

[ext_resource path="res://ElecHs.gd" type="Script" id=1]
[ext_resource path="res://image/kouen atama.png" type="Texture" id=2]
[ext_resource path="res://image/spot.png" type="Texture" id=3]
[ext_resource path="res://Hisamatu.gd" type="Script" id=4]
[ext_resource path="res://image/kouen asi2.png" type="Texture" id=5]
[ext_resource path="res://image/kouen asi1.png" type="Texture" id=6]
[ext_resource path="res://image/dsdfsfs.png" type="Texture" id=7]
[ext_resource path="res://Beam.tscn" type="PackedScene" id=8]
[ext_resource path="res://image/ball.png" type="Texture" id=9]
[ext_resource path="res://image/g_ball.png" type="Texture" id=10]
[ext_resource path="res://sound/Dark_Loop.wav" type="AudioStream" id=11]

[sub_resource type="Shader" id=17]
code = "shader_type canvas_item;
render_mode blend_mix,unshaded;

uniform float brightness : hint_range(-1, 1) = 0;
uniform float contrast : hint_range(0, 3) = 1.0;
uniform float saturation : hint_range(0, 3) = 1.0;

uniform float redVal : hint_range(0, 1) = 1.0;
uniform float greenVal : hint_range(0, 1) = 1.0;
uniform float blueVal : hint_range(0, 1) = 1.0;

uniform vec4 tint_color : hint_color = vec4(1.0, 1.0, 1.0, 1.0);
uniform float tint_effect_factor : hint_range(0, 1) = 0.0;
//---------------------------------------------
//CONTRAST
//---------------------------------------------
mat4 contrastMatrix( float _contrast ){
	float t = ( 1.0 - _contrast ) / 2.0;
    return mat4( 
		vec4(_contrast, 0, 0, 0),
		vec4(0, _contrast, 0, 0),
		vec4(0, 0, _contrast, 0),
		vec4(t, t, t, 1));
}
//---------------------------------------------
//BRIGHTNESS
//---------------------------------------------
mat4 brightnessMatrix( float _brightness ){
    return mat4( vec4(1, 0, 0, 0),
                 vec4(0, 1, 0, 0),
                 vec4(0, 0, 1, 0),
                 vec4(_brightness, _brightness, _brightness, 1));
}
//---------------------------------------------
//SATURATION
//---------------------------------------------
mat4 saturationMatrix( float _saturation ){
    vec3 luminance = vec3( 0.3086, 0.6094, 0.0820 );
    float oneMinusSat = 1.0 - _saturation;
	
    vec3 red = vec3( luminance.x * oneMinusSat );
    red+= vec3(_saturation, 0, 0)*redVal;
    vec3 green = vec3( luminance.y * oneMinusSat );
    green += vec3( 0,_saturation, 0 )*greenVal;
    vec3 blue = vec3( luminance.z * oneMinusSat );
    blue += vec3( 0, 0,_saturation )*blueVal;
	
    return mat4(vec4(red, 0),vec4(green,0),vec4(blue,0),vec4(0, 0, 0, 1));
}

//---------------------------------------------
//fragment
//---------------------------------------------
void fragment() {
	vec4 c = texture(TEXTURE, UV);
	vec4 c2 = c * tint_color;
	COLOR = brightnessMatrix( brightness ) * contrastMatrix( contrast ) *saturationMatrix( saturation ) * mix(c, c2, tint_effect_factor);
}"

[sub_resource type="ShaderMaterial" id=18]
shader = SubResource( 17 )
shader_param/brightness = 0.23
shader_param/contrast = 0.656
shader_param/saturation = 1.279
shader_param/redVal = 1.0
shader_param/greenVal = 1.0
shader_param/blueVal = 1.0
shader_param/tint_color = Color( 1, 1, 1, 1 )
shader_param/tint_effect_factor = 0.0

[sub_resource type="CapsuleShape2D" id=11]
height = 24.0

[sub_resource type="Shader" id=15]
code = "// original wind shader from https://github.com/Maujoe/godot-simple-wind-shader-2d/tree/master/assets/maujoe.simple_wind_shader_2d
// original script modified by HungryProton so that the assets are moving differently : https://pastebin.com/VL3AfV8D
//
// speed - The speed of the wind movement.
// minStrength - The minimal strength of the wind movement.
// maxStrength - The maximal strength of the wind movement.
// strengthScale - Scalefactor for the wind strength.
// interval - The time between minimal and maximal strength changes.
// detail - The detail (number of waves) of the wind movement.
// distortion - The strength of geometry distortion.
// heightOffset - The height where the wind begins to move. By default 0.0.

shader_type canvas_item;
render_mode blend_mix;

// Wind settings.
uniform float speed = 1.0;
uniform float minStrength : hint_range(0.0, 1.0) = 0.05;
uniform float maxStrength : hint_range(0.0, 1.0) = 0.01;
uniform float strengthScale = 100.0;
uniform float interval = 3.5;
uniform float detail = 1.0;
uniform float distortion : hint_range(0.0, 1.0);
uniform float heightOffset : hint_range(0.0, 1.0);

// With the offset value, you can if you want different moves for each asset. Just put a random value (1, 2, 3) in the editor. Don't forget to mark the material as unique if you use this
uniform float offset = 0; 


float getWind(vec2 vertex, vec2 uv, float time){
    float diff = pow(maxStrength - minStrength, 2.0);
    float strength = clamp(minStrength + diff + sin(time / interval) * diff, minStrength, maxStrength) * strengthScale;
    float wind = (sin(time) + cos(time * detail)) * strength * max(0.0, (1.0-uv.y) - heightOffset);
    
    return wind; 
}

void vertex() {
    vec4 pos = WORLD_MATRIX * vec4(0.0, 0.0, 0.0, 1.0);
    float time = TIME * speed + offset;
    //float time = TIME * speed + pos.x * pos.y  ; not working when moving...
    VERTEX.x += getWind(VERTEX.xy, UV, time);
}
uniform float brightness : hint_range(-1, 1) = 0;
uniform float contrast : hint_range(0, 3) = 1.0;
uniform float saturation : hint_range(0, 3) = 1.0;

uniform float redVal : hint_range(0, 1) = 1.0;
uniform float greenVal : hint_range(0, 1) = 1.0;
uniform float blueVal : hint_range(0, 1) = 1.0;

uniform vec4 tint_color : hint_color = vec4(1.0, 1.0, 1.0, 1.0);
uniform float tint_effect_factor : hint_range(0, 1) = 0.0;
//---------------------------------------------
//CONTRAST
//---------------------------------------------
mat4 contrastMatrix( float _contrast ){
	float t = ( 1.0 - _contrast ) / 2.0;
    return mat4( 
		vec4(_contrast, 0, 0, 0),
		vec4(0, _contrast, 0, 0),
		vec4(0, 0, _contrast, 0),
		vec4(t, t, t, 1));
}
//---------------------------------------------
//BRIGHTNESS
//---------------------------------------------
mat4 brightnessMatrix( float _brightness ){
    return mat4( vec4(1, 0, 0, 0),
                 vec4(0, 1, 0, 0),
                 vec4(0, 0, 1, 0),
                 vec4(_brightness, _brightness, _brightness, 1));
}
//---------------------------------------------
//SATURATION
//---------------------------------------------
mat4 saturationMatrix( float _saturation ){
    vec3 luminance = vec3( 0.3086, 0.6094, 0.0820 );
    float oneMinusSat = 1.0 - _saturation;
	
    vec3 red = vec3( luminance.x * oneMinusSat );
    red+= vec3(_saturation, 0, 0)*redVal;
    vec3 green = vec3( luminance.y * oneMinusSat );
    green += vec3( 0,_saturation, 0 )*greenVal;
    vec3 blue = vec3( luminance.z * oneMinusSat );
    blue += vec3( 0, 0,_saturation )*blueVal;
	
    return mat4(vec4(red, 0),vec4(green,0),vec4(blue,0),vec4(0, 0, 0, 1));
}

//---------------------------------------------
//fragment
//---------------------------------------------
void fragment() {
	vec4 c = texture(TEXTURE, UV);
	vec4 c2 = c * tint_color;
	COLOR = brightnessMatrix( brightness ) * contrastMatrix( contrast ) *saturationMatrix( saturation ) * mix(c, c2, tint_effect_factor);
}"

[sub_resource type="ShaderMaterial" id=16]
shader = SubResource( 15 )
shader_param/speed = 0.0
shader_param/minStrength = 0.093
shader_param/maxStrength = 0.01
shader_param/strengthScale = 90.0
shader_param/interval = 3.5
shader_param/detail = 5.0
shader_param/distortion = 0.0
shader_param/heightOffset = 0.0
shader_param/offset = 1.0
shader_param/brightness = 0.088
shader_param/contrast = 1.164
shader_param/saturation = 1.0
shader_param/redVal = 1.0
shader_param/greenVal = 1.0
shader_param/blueVal = 1.0
shader_param/tint_color = Color( 1, 1, 1, 1 )
shader_param/tint_effect_factor = 0.0

[sub_resource type="Animation" id=19]
length = 0.001
tracks/0/type = "value"
tracks/0/path = NodePath("reg/KouenAsi3:rotation_degrees")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 0,
"values": [ 0.0 ]
}
tracks/1/type = "value"
tracks/1/path = NodePath("reg/KouenAsi2:rotation_degrees")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 0,
"values": [ 0.0 ]
}
tracks/2/type = "value"
tracks/2/path = NodePath("reg/KouenAsi4:rotation_degrees")
tracks/2/interp = 1
tracks/2/loop_wrap = true
tracks/2/imported = false
tracks/2/enabled = true
tracks/2/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 0,
"values": [ 0.0 ]
}
tracks/3/type = "value"
tracks/3/path = NodePath("reg/KouenAsi1:rotation_degrees")
tracks/3/interp = 1
tracks/3/loop_wrap = true
tracks/3/imported = false
tracks/3/enabled = true
tracks/3/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 0,
"values": [ 0.0 ]
}
tracks/4/type = "value"
tracks/4/path = NodePath("Icon/GBall:visible")
tracks/4/interp = 1
tracks/4/loop_wrap = true
tracks/4/imported = false
tracks/4/enabled = true
tracks/4/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 0,
"values": [ false ]
}
tracks/5/type = "value"
tracks/5/path = NodePath("AnimationPlayer/AudioStreamPlayer:playing")
tracks/5/interp = 1
tracks/5/loop_wrap = true
tracks/5/imported = false
tracks/5/enabled = true
tracks/5/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 0,
"values": [ false ]
}

[sub_resource type="Animation" id=20]
resource_name = "move"
length = 2.0
loop = true
tracks/0/type = "value"
tracks/0/path = NodePath("reg/KouenAsi3:rotation_degrees")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0, 1, 2 ),
"transitions": PoolRealArray( 1, 1, 1 ),
"update": 0,
"values": [ -15.0, 15.0, -15.0 ]
}
tracks/1/type = "value"
tracks/1/path = NodePath("reg/KouenAsi2:rotation_degrees")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/keys = {
"times": PoolRealArray( 0, 1, 2 ),
"transitions": PoolRealArray( 1, 1, 1 ),
"update": 0,
"values": [ 15.0, -15.0, 15.0 ]
}
tracks/2/type = "value"
tracks/2/path = NodePath("reg/KouenAsi4:rotation_degrees")
tracks/2/interp = 1
tracks/2/loop_wrap = true
tracks/2/imported = false
tracks/2/enabled = true
tracks/2/keys = {
"times": PoolRealArray( 0, 1, 2 ),
"transitions": PoolRealArray( 1, 1, 1 ),
"update": 0,
"values": [ -15.0, 15.0, -15.0 ]
}
tracks/3/type = "value"
tracks/3/path = NodePath("reg/KouenAsi1:rotation_degrees")
tracks/3/interp = 1
tracks/3/loop_wrap = true
tracks/3/imported = false
tracks/3/enabled = true
tracks/3/keys = {
"times": PoolRealArray( 0, 1, 2 ),
"transitions": PoolRealArray( 1, 1, 1 ),
"update": 0,
"values": [ 15.0, -15.0, 15.0 ]
}
tracks/4/type = "value"
tracks/4/path = NodePath("Icon/GBall:visible")
tracks/4/interp = 1
tracks/4/loop_wrap = true
tracks/4/imported = false
tracks/4/enabled = true
tracks/4/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 1,
"values": [ true ]
}
tracks/5/type = "value"
tracks/5/path = NodePath("AnimationPlayer/AudioStreamPlayer:playing")
tracks/5/interp = 1
tracks/5/loop_wrap = true
tracks/5/imported = false
tracks/5/enabled = true
tracks/5/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 1,
"values": [ true ]
}

[sub_resource type="Animation" id=7]
length = 0.001
tracks/0/type = "value"
tracks/0/path = NodePath("Area2D:modulate")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 0,
"values": [ Color( 1, 1, 1, 1 ) ]
}
tracks/1/type = "value"
tracks/1/path = NodePath("Area2D:position")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 0,
"values": [ Vector2( 0, 0 ) ]
}
tracks/2/type = "value"
tracks/2/path = NodePath("Area2D/Icon:position")
tracks/2/interp = 1
tracks/2/loop_wrap = true
tracks/2/imported = false
tracks/2/enabled = false
tracks/2/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 0,
"values": [ Vector2( 0, 0 ) ]
}
tracks/3/type = "value"
tracks/3/path = NodePath("Area2D/reg:modulate")
tracks/3/interp = 1
tracks/3/loop_wrap = true
tracks/3/imported = false
tracks/3/enabled = false
tracks/3/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 0,
"values": [ Color( 1, 1, 1, 1 ) ]
}
tracks/4/type = "value"
tracks/4/path = NodePath("Area2D/Icon:position")
tracks/4/interp = 1
tracks/4/loop_wrap = true
tracks/4/imported = false
tracks/4/enabled = true
tracks/4/keys = {
"times": PoolRealArray( 0, 1 ),
"transitions": PoolRealArray( 1, 1 ),
"update": 0,
"values": [ Vector2( 0, 56 ), Vector2( 0, 0 ) ]
}
tracks/5/type = "value"
tracks/5/path = NodePath("Area2D/reg:modulate")
tracks/5/interp = 1
tracks/5/loop_wrap = true
tracks/5/imported = false
tracks/5/enabled = true
tracks/5/keys = {
"times": PoolRealArray( 0, 0.6, 0.9 ),
"transitions": PoolRealArray( 1, 1, 1 ),
"update": 0,
"values": [ Color( 1, 1, 1, 0 ), Color( 1, 1, 1, 0.0627451 ), Color( 1, 1, 1, 1 ) ]
}

[sub_resource type="Animation" id=22]
resource_name = "down"
tracks/0/type = "value"
tracks/0/path = NodePath("Area2D/Icon:position")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0, 1 ),
"transitions": PoolRealArray( 1, 1 ),
"update": 0,
"values": [ Vector2( 0, 0 ), Vector2( 0, 56 ) ]
}
tracks/1/type = "value"
tracks/1/path = NodePath("Area2D/reg:modulate")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/keys = {
"times": PoolRealArray( 0, 0.7, 1 ),
"transitions": PoolRealArray( 1, 1, 1 ),
"update": 0,
"values": [ Color( 1, 1, 1, 1 ), Color( 1, 1, 1, 0 ), Color( 1, 1, 1, 0.0627451 ) ]
}

[sub_resource type="Animation" id=14]
tracks/0/type = "value"
tracks/0/path = NodePath("Area2D:modulate")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0, 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9, 1 ),
"transitions": PoolRealArray( 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1 ),
"update": 0,
"values": [ Color( 1, 1, 1, 1 ), Color( 1, 1, 1, 0 ), Color( 1, 1, 1, 1 ), Color( 1, 1, 1, 0 ), Color( 1, 1, 1, 1 ), Color( 1, 1, 1, 0 ), Color( 1, 1, 1, 1 ), Color( 1, 1, 1, 0 ), Color( 1, 1, 1, 1 ), Color( 1, 1, 1, 0 ), Color( 1, 1, 1, 1 ) ]
}
tracks/1/type = "value"
tracks/1/path = NodePath("Area2D:position")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/keys = {
"times": PoolRealArray( 0, 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9, 1 ),
"transitions": PoolRealArray( 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1 ),
"update": 0,
"values": [ Vector2( 0, 0 ), Vector2( 1, 0 ), Vector2( 0, -1.3 ), Vector2( -1, 0 ), Vector2( 0, 1 ), Vector2( -1.2, 1 ), Vector2( 1, -1 ), Vector2( -1.3, -1.4 ), Vector2( 1.2, 1 ), Vector2( 0, -1.3 ), Vector2( 0, 0 ) ]
}

[sub_resource type="Animation" id=21]
resource_name = "up"
tracks/0/type = "value"
tracks/0/path = NodePath("Area2D/Icon:position")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0, 1 ),
"transitions": PoolRealArray( 1, 1 ),
"update": 0,
"values": [ Vector2( 0, 56 ), Vector2( 0, 0 ) ]
}
tracks/1/type = "value"
tracks/1/path = NodePath("Area2D/reg:modulate")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/keys = {
"times": PoolRealArray( 0, 0.6, 0.9 ),
"transitions": PoolRealArray( 1, 1, 1 ),
"update": 0,
"values": [ Color( 1, 1, 1, 0 ), Color( 1, 1, 1, 0.0627451 ), Color( 1, 1, 1, 1 ) ]
}

[sub_resource type="RectangleShape2D" id=23]
extents = Vector2( 296, 5 )

[sub_resource type="Animation" id=24]
length = 0.001
tracks/0/type = "value"
tracks/0/path = NodePath(".:rotation_degrees")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 0,
"values": [ 0.0 ]
}

[sub_resource type="Animation" id=25]
resource_name = "dd"
length = 3.0
loop = true
tracks/0/type = "value"
tracks/0/path = NodePath(".:rotation_degrees")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0, 3 ),
"transitions": PoolRealArray( 1, 1 ),
"update": 0,
"values": [ 0.0, 360.0 ]
}

[sub_resource type="RectangleShape2D" id=1]
extents = Vector2( 68, 60 )

[sub_resource type="CircleShape2D" id=4]
radius = 24.0

[sub_resource type="Animation" id=5]
length = 0.001
tracks/0/type = "value"
tracks/0/path = NodePath(".:modulate")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 0,
"values": [ Color( 0.564706, 0.564706, 0.564706, 1 ) ]
}

[sub_resource type="Animation" id=6]
resource_name = "on"
loop = true
tracks/0/type = "value"
tracks/0/path = NodePath(".:modulate")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0, 0.5, 1 ),
"transitions": PoolRealArray( 1, 1, 1 ),
"update": 0,
"values": [ Color( 1, 1, 1, 1 ), Color( 2, 2, 2, 1 ), Color( 1, 1, 1, 1 ) ]
}

[node name="hisamatu" type="PathFollow2D" groups=["mob"]]
offset = 60.4446
rotate = false
script = ExtResource( 4 )
move_speed = 2.2

[node name="Area2D" type="Area2D" parent="." groups=["mob"]]
material = SubResource( 18 )
collision_layer = 8
collision_mask = 33
monitorable = false

[node name="CollisionShape2D" type="CollisionShape2D" parent="Area2D"]
visible = false
position = Vector2( 0, 3 )
rotation = 1.5708
shape = SubResource( 11 )

[node name="Shadow" type="Sprite" parent="Area2D"]
modulate = Color( 0, 0, 0, 0.364706 )
show_behind_parent = true
position = Vector2( 0, 48 )
scale = Vector2( 1.75, 0.134776 )
texture = ExtResource( 3 )
offset = Vector2( 0, 20 )

[node name="reg" type="Node2D" parent="Area2D"]
modulate = Color( 1, 1, 1, 0 )

[node name="KouenAsi3" type="Sprite" parent="Area2D/reg"]
position = Vector2( 32, 0 )
texture = ExtResource( 5 )
offset = Vector2( 5, 20 )

[node name="KouenAsi1" type="Sprite" parent="Area2D/reg"]
position = Vector2( -24, 0 )
texture = ExtResource( 6 )
offset = Vector2( -2, 20 )

[node name="KouenAsi4" type="Sprite" parent="Area2D/reg"]
position = Vector2( -40, -7.15256e-07 )
texture = ExtResource( 6 )
offset = Vector2( -2, 21 )

[node name="KouenAsi2" type="Sprite" parent="Area2D/reg"]
position = Vector2( 48, 9.53674e-07 )
texture = ExtResource( 5 )
offset = Vector2( 3, 19 )

[node name="Icon" type="Sprite" parent="Area2D"]
modulate = Color( 1.10196, 1.10196, 1.2, 0.866667 )
material = SubResource( 16 )
use_parent_material = true
position = Vector2( 0, 56 )
scale = Vector2( 1.5, 1.7 )
texture = ExtResource( 2 )

[node name="GBall" type="Sprite" parent="Area2D/Icon"]
visible = false
position = Vector2( 0.333333, -46.4706 )
scale = Vector2( 0.188406, 0.192077 )
texture = ExtResource( 10 )

[node name="AnimationPlayer" type="AnimationPlayer" parent="Area2D"]
anims/RESET = SubResource( 19 )
anims/move = SubResource( 20 )

[node name="AudioStreamPlayer" type="AudioStreamPlayer" parent="Area2D/AnimationPlayer"]
stream = ExtResource( 11 )
volume_db = -14.0

[node name="AnimationPlayer" type="AnimationPlayer" parent="."]
autoplay = "RESET"
anims/RESET = SubResource( 7 )
anims/down = SubResource( 22 )
anims/take_damage = SubResource( 14 )
anims/up = SubResource( 21 )

[node name="ElecHs" type="Node2D" parent="." groups=["tower"]]
modulate = Color( 0.564706, 0.564706, 0.564706, 1 )
position = Vector2( 0, -16 )
script = ExtResource( 1 )
Fire = ExtResource( 8 )

[node name="FireArea2D2" type="Area2D" parent="ElecHs"]
collision_mask = 16

[node name="CollisionShape2D" type="CollisionShape2D" parent="ElecHs/FireArea2D2"]
position = Vector2( 296, -5.14984e-05 )
shape = SubResource( 23 )

[node name="AnimationPlayer" type="AnimationPlayer" parent="ElecHs/FireArea2D2"]
autoplay = "dd"
anims/RESET = SubResource( 24 )
anims/dd = SubResource( 25 )

[node name="Area2D" type="Area2D" parent="ElecHs" groups=["tower"]]
collision_layer = 8

[node name="Sprite" type="Sprite" parent="ElecHs/Area2D"]
visible = false
position = Vector2( 0, -48 )
scale = Vector2( 0.3, 0.3 )
texture = ExtResource( 9 )

[node name="CollisionShape2D" type="CollisionShape2D" parent="ElecHs/Area2D"]
position = Vector2( 4, 12 )
shape = SubResource( 1 )

[node name="Muzzle" type="Sprite" parent="ElecHs"]
position = Vector2( 0, -56 )
texture = ExtResource( 7 )

[node name="shotPos" type="Position2D" parent="ElecHs/Muzzle"]
position = Vector2( 0, 1 )

[node name="StaticBody2D" type="StaticBody2D" parent="ElecHs"]

[node name="CollisionShape2D" type="CollisionShape2D" parent="ElecHs/StaticBody2D"]
visible = false
shape = SubResource( 4 )
disabled = true

[node name="Light2D" type="Light2D" parent="ElecHs"]
visible = false
texture = ExtResource( 3 )

[node name="Timer" type="Timer" parent="ElecHs"]

[node name="AnimationPlayer" type="AnimationPlayer" parent="ElecHs"]
anims/RESET = SubResource( 5 )
anims/on = SubResource( 6 )

[connection signal="area_entered" from="Area2D" to="." method="_on_Area2D_area_entered"]
[connection signal="area_entered" from="ElecHs/FireArea2D2" to="ElecHs" method="_on_FireArea2D2_area_entered"]
[connection signal="body_entered" from="ElecHs/Area2D" to="ElecHs" method="_on_Area2D_body_entered"]
[connection signal="timeout" from="ElecHs/Timer" to="ElecHs" method="_on_Timer_timeout"]
